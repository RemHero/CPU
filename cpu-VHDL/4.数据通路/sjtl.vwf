/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 3.0us\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 3000.0;
	SIMULATION_TIME = 3000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("alu_sel")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("alu_sel[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "alu_sel";
}

SIGNAL("alu_sel[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "alu_sel";
}

SIGNAL("alu_sel[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "alu_sel";
}

SIGNAL("alu_sel[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "alu_sel";
}

SIGNAL("alu_sel[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "alu_sel";
}

SIGNAL("alu_sel[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "alu_sel";
}

SIGNAL("bus_sel")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("bus_sel[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "bus_sel";
}

SIGNAL("bus_sel[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "bus_sel";
}

SIGNAL("bus_sel[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "bus_sel";
}

SIGNAL("bus_sel[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "bus_sel";
}

SIGNAL("bus_sel[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "bus_sel";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("d")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = BIDIR;
	PARENT = "";
}

SIGNAL("d[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "d";
}

SIGNAL("d[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "d";
}

SIGNAL("d[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "d";
}

SIGNAL("d[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "d";
}

SIGNAL("d[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "d";
}

SIGNAL("d[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "d";
}

SIGNAL("d[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "d";
}

SIGNAL("d[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "d";
}

SIGNAL("k")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("k[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k";
}

SIGNAL("k[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k";
}

SIGNAL("k[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k";
}

SIGNAL("k[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k";
}

SIGNAL("k[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k";
}

SIGNAL("k[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k";
}

SIGNAL("k[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k";
}

SIGNAL("k[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "k";
}

SIGNAL("ld_reg")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ld_reg[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ld_reg";
}

SIGNAL("ld_reg[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ld_reg";
}

SIGNAL("ld_reg[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ld_reg";
}

SIGNAL("ld_reg[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ld_reg";
}

SIGNAL("ld_reg[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ld_reg";
}

SIGNAL("pc_sel")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("pc_sel[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "pc_sel";
}

SIGNAL("pc_sel[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "pc_sel";
}

SIGNAL("pc_sel[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "pc_sel";
}

SIGNAL("we_rd")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("we_rd[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "we_rd";
}

SIGNAL("we_rd[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "we_rd";
}

SIGNAL("d[7]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("d[6]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("d[5]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("d[4]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("d[3]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("d[2]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("d[1]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("d[0]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

GROUP("d7-0~result")
{
	MEMBERS = "d[7]~result", "d[6]~result", "d[5]~result", "d[4]~result", "d[3]~result", "d[2]~result", "d[1]~result", "d[0]~result";
}

TRANSITION_LIST("alu_sel[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1800.0;
	}
}

TRANSITION_LIST("alu_sel[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1100.0;
	}
}

TRANSITION_LIST("alu_sel[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1100.0;
	}
}

TRANSITION_LIST("alu_sel[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 800.0;
	}
}

TRANSITION_LIST("alu_sel[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 800.0;
	}
}

TRANSITION_LIST("alu_sel[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1100.0;
	}
}

TRANSITION_LIST("bus_sel[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 700.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1500.0;
	}
}

TRANSITION_LIST("bus_sel[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 900.0;
	}
}

TRANSITION_LIST("bus_sel[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1900.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("bus_sel[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 800.0;
	}
}

TRANSITION_LIST("bus_sel[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 400.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1400.0;
	}
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 30;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
	}
}

TRANSITION_LIST("d[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 3000.0;
	}
}

TRANSITION_LIST("d[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 3000.0;
	}
}

TRANSITION_LIST("d[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 3000.0;
	}
}

TRANSITION_LIST("d[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 3000.0;
	}
}

TRANSITION_LIST("d[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 3000.0;
	}
}

TRANSITION_LIST("d[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 3000.0;
	}
}

TRANSITION_LIST("d[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 3000.0;
	}
}

TRANSITION_LIST("d[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 3000.0;
	}
}

TRANSITION_LIST("k[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("k[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("k[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("k[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("k[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("k[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
	}
}

TRANSITION_LIST("k[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.4;
		LEVEL 1 FOR 0.1;
		LEVEL 0 FOR 198.5;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1500.0;
	}
}

TRANSITION_LIST("k[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1.4;
		LEVEL 1 FOR 0.1;
		LEVEL 0 FOR 598.5;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 700.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1500.0;
	}
}

TRANSITION_LIST("ld_reg[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("ld_reg[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1400.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 900.0;
	}
}

TRANSITION_LIST("ld_reg[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1600.0;
	}
}

TRANSITION_LIST("ld_reg[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1800.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1100.0;
	}
}

TRANSITION_LIST("ld_reg[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1400.0;
	}
}

TRANSITION_LIST("pc_sel[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 3000.0;
	}
}

TRANSITION_LIST("pc_sel[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 900.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 2000.0;
	}
}

TRANSITION_LIST("pc_sel[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1500.0;
	}
}

TRANSITION_LIST("we_rd[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1800.0;
	}
}

TRANSITION_LIST("we_rd[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 1200.0;
	}
}

TRANSITION_LIST("d[7]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 123.4;
		LEVEL 0 FOR 97.6;
		LEVEL 1 FOR 2.4;
		LEVEL Z FOR 5.5;
		LEVEL 0 FOR 392.1;
		LEVEL 1 FOR 2.4;
		LEVEL Z FOR 5.5;
		LEVEL 0 FOR 193.7;
		LEVEL 1 FOR 1.3;
		LEVEL Z FOR 5.1;
		LEVEL 0 FOR 293.6;
		LEVEL 1 FOR 1.3;
		LEVEL Z FOR 5.1;
		LEVEL 0 FOR 2.8;
		LEVEL 1 FOR 89.2;
		LEVEL 0 FOR 3.4;
		LEVEL 1 FOR 99.0;
		LEVEL Z FOR 5.6;
		LEVEL 1 FOR 2.3;
		LEVEL 0 FOR 0.5;
		LEVEL 1 FOR 4.3;
		LEVEL 0 FOR 286.5;
		LEVEL 1 FOR 63.1;
		LEVEL 0 FOR 135.3;
		LEVEL 1 FOR 2.4;
		LEVEL Z FOR 5.6;
		LEVEL 0 FOR 95.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 4.5;
		LEVEL Z FOR 0.5;
		LEVEL 0 FOR 294.5;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 771.0;
	}
}

TRANSITION_LIST("d[6]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 123.8;
		LEVEL 0 FOR 95.8;
		LEVEL 1 FOR 3.3;
		LEVEL 0 FOR 0.9;
		LEVEL Z FOR 5.5;
		LEVEL 0 FOR 390.3;
		LEVEL 1 FOR 3.3;
		LEVEL 0 FOR 0.9;
		LEVEL Z FOR 5.5;
		LEVEL 0 FOR 191.8;
		LEVEL 1 FOR 1.9;
		LEVEL 0 FOR 1.3;
		LEVEL Z FOR 5.1;
		LEVEL 0 FOR 291.7;
		LEVEL 1 FOR 1.9;
		LEVEL 0 FOR 1.3;
		LEVEL Z FOR 5.1;
		LEVEL 1 FOR 90.2;
		LEVEL 0 FOR 2.7;
		LEVEL 1 FOR 101.5;
		LEVEL Z FOR 5.6;
		LEVEL 1 FOR 6.4;
		LEVEL 0 FOR 285.3;
		LEVEL 1 FOR 62.5;
		LEVEL 0 FOR 136.0;
		LEVEL 1 FOR 3.4;
		LEVEL 0 FOR 0.8;
		LEVEL Z FOR 5.6;
		LEVEL 0 FOR 93.6;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 5.9;
		LEVEL Z FOR 0.5;
		LEVEL 0 FOR 293.1;
		LEVEL 1 FOR 6.4;
		LEVEL Z FOR 770.6;
	}
}

TRANSITION_LIST("d[5]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 123.8;
		LEVEL 0 FOR 93.0;
		LEVEL 1 FOR 4.5;
		LEVEL 0 FOR 2.5;
		LEVEL Z FOR 5.5;
		LEVEL 0 FOR 387.5;
		LEVEL 1 FOR 4.5;
		LEVEL 0 FOR 2.5;
		LEVEL Z FOR 5.5;
		LEVEL 0 FOR 189.3;
		LEVEL 1 FOR 2.8;
		LEVEL 0 FOR 2.9;
		LEVEL Z FOR 5.1;
		LEVEL 0 FOR 289.2;
		LEVEL 1 FOR 2.8;
		LEVEL 0 FOR 2.9;
		LEVEL Z FOR 5.1;
		LEVEL 0 FOR 5.7;
		LEVEL 1 FOR 81.7;
		LEVEL 0 FOR 3.6;
		LEVEL 1 FOR 103.4;
		LEVEL Z FOR 5.6;
		LEVEL 1 FOR 8.9;
		LEVEL 0 FOR 280.3;
		LEVEL 1 FOR 63.1;
		LEVEL 0 FOR 135.1;
		LEVEL 1 FOR 4.6;
		LEVEL 0 FOR 2.4;
		LEVEL Z FOR 5.6;
		LEVEL 0 FOR 92.0;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 7.5;
		LEVEL Z FOR 0.5;
		LEVEL 0 FOR 291.5;
		LEVEL 1 FOR 8.0;
		LEVEL Z FOR 770.6;
	}
}

TRANSITION_LIST("d[4]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 123.6;
		LEVEL 0 FOR 94.4;
		LEVEL 1 FOR 4.7;
		LEVEL 0 FOR 0.9;
		LEVEL Z FOR 5.5;
		LEVEL 0 FOR 388.9;
		LEVEL 1 FOR 4.7;
		LEVEL 0 FOR 0.9;
		LEVEL Z FOR 5.5;
		LEVEL 0 FOR 190.4;
		LEVEL 1 FOR 3.3;
		LEVEL 0 FOR 1.3;
		LEVEL Z FOR 5.1;
		LEVEL 0 FOR 290.3;
		LEVEL 1 FOR 3.3;
		LEVEL 0 FOR 1.3;
		LEVEL Z FOR 5.1;
		LEVEL 0 FOR 3.4;
		LEVEL 1 FOR 85.4;
		LEVEL 0 FOR 2.4;
		LEVEL 1 FOR 103.2;
		LEVEL Z FOR 5.6;
		LEVEL 1 FOR 10.2;
		LEVEL 0 FOR 280.1;
		LEVEL 1 FOR 62.2;
		LEVEL 0 FOR 136.3;
		LEVEL 1 FOR 4.8;
		LEVEL 0 FOR 0.8;
		LEVEL Z FOR 5.6;
		LEVEL 0 FOR 93.6;
		LEVEL 1 FOR 0.5;
		LEVEL 0 FOR 5.9;
		LEVEL Z FOR 0.5;
		LEVEL 0 FOR 203.4;
		LEVEL 1 FOR 11.4;
		LEVEL 0 FOR 78.3;
		LEVEL 1 FOR 6.4;
		LEVEL Z FOR 770.8;
	}
}

TRANSITION_LIST("d[3]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 123.7;
		LEVEL 0 FOR 93.5;
		LEVEL 1 FOR 4.7;
		LEVEL 0 FOR 1.8;
		LEVEL Z FOR 5.5;
		LEVEL 0 FOR 251.7;
		LEVEL 1 FOR 141.0;
		LEVEL 0 FOR 1.8;
		LEVEL Z FOR 5.5;
		LEVEL 0 FOR 189.5;
		LEVEL 1 FOR 3.3;
		LEVEL 0 FOR 2.2;
		LEVEL Z FOR 5.1;
		LEVEL 0 FOR 3.2;
		LEVEL 1 FOR 86.2;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 3.3;
		LEVEL 0 FOR 2.2;
		LEVEL Z FOR 5.1;
		LEVEL 0 FOR 5.2;
		LEVEL 1 FOR 82.7;
		LEVEL 0 FOR 2.4;
		LEVEL 1 FOR 104.1;
		LEVEL Z FOR 5.6;
		LEVEL 1 FOR 3.4;
		LEVEL 0 FOR 2.3;
		LEVEL 1 FOR 2.2;
		LEVEL 0 FOR 1.2;
		LEVEL 1 FOR 83.5;
		LEVEL 0 FOR 196.8;
		LEVEL 1 FOR 62.2;
		LEVEL 0 FOR 136.3;
		LEVEL 1 FOR 4.8;
		LEVEL 0 FOR 1.7;
		LEVEL Z FOR 5.6;
		LEVEL 0 FOR 3.2;
		LEVEL 1 FOR 96.8;
		LEVEL Z FOR 0.5;
		LEVEL 1 FOR 202.5;
		LEVEL 0 FOR 89.7;
		LEVEL 1 FOR 7.3;
		LEVEL Z FOR 770.7;
	}
}

TRANSITION_LIST("d[2]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 123.7;
		LEVEL 1 FOR 100.0;
		LEVEL Z FOR 5.5;
		LEVEL 0 FOR 190.3;
		LEVEL 1 FOR 62.9;
		LEVEL 0 FOR 135.7;
		LEVEL 1 FOR 4.8;
		LEVEL 0 FOR 0.8;
		LEVEL Z FOR 5.5;
		LEVEL 0 FOR 190.3;
		LEVEL 1 FOR 3.5;
		LEVEL 0 FOR 1.2;
		LEVEL Z FOR 5.1;
		LEVEL 0 FOR 5.6;
		LEVEL 1 FOR 84.6;
		LEVEL 0 FOR 49.8;
		LEVEL 1 FOR 154.9;
		LEVEL Z FOR 5.1;
		LEVEL 1 FOR 5.6;
		LEVEL 0 FOR 183.2;
		LEVEL 1 FOR 4.9;
		LEVEL 0 FOR 0.7;
		LEVEL Z FOR 5.6;
		LEVEL 0 FOR 353.1;
		LEVEL 1 FOR 141.3;
		LEVEL Z FOR 5.6;
		LEVEL 1 FOR 100.0;
		LEVEL Z FOR 0.5;
		LEVEL 1 FOR 97.4;
		LEVEL 0 FOR 115.0;
		LEVEL 1 FOR 87.1;
		LEVEL Z FOR 770.7;
	}
}

TRANSITION_LIST("d[1]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 123.9;
		LEVEL 0 FOR 92.9;
		LEVEL 1 FOR 4.8;
		LEVEL 0 FOR 0.8;
		LEVEL 1 FOR 1.5;
		LEVEL Z FOR 5.5;
		LEVEL 1 FOR 86.8;
		LEVEL 0 FOR 5.4;
		LEVEL 1 FOR 95.2;
		LEVEL 0 FOR 64.0;
		LEVEL 1 FOR 143.1;
		LEVEL Z FOR 5.5;
		LEVEL 1 FOR 86.8;
		LEVEL 0 FOR 5.4;
		LEVEL 1 FOR 102.8;
		LEVEL Z FOR 5.1;
		LEVEL 1 FOR 4.6;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 133.5;
		LEVEL 0 FOR 150.5;
		LEVEL 1 FOR 3.4;
		LEVEL 0 FOR 2.7;
		LEVEL Z FOR 5.1;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 83.3;
		LEVEL 0 FOR 2.7;
		LEVEL 1 FOR 104.4;
		LEVEL Z FOR 5.6;
		LEVEL 1 FOR 7.5;
		LEVEL 0 FOR 1.6;
		LEVEL 1 FOR 83.8;
		LEVEL 0 FOR 195.9;
		LEVEL 1 FOR 62.5;
		LEVEL 0 FOR 136.0;
		LEVEL 1 FOR 4.9;
		LEVEL 0 FOR 2.2;
		LEVEL Z FOR 5.6;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 0.6;
		LEVEL 0 FOR 0.2;
		LEVEL 1 FOR 95.2;
		LEVEL Z FOR 0.5;
		LEVEL 1 FOR 204.0;
		LEVEL 0 FOR 87.7;
		LEVEL 1 FOR 7.8;
		LEVEL Z FOR 770.5;
	}
}

TRANSITION_LIST("d[0]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 123.4;
		LEVEL 1 FOR 100.0;
		LEVEL Z FOR 5.5;
		LEVEL 0 FOR 189.4;
		LEVEL 1 FOR 65.7;
		LEVEL 0 FOR 133.5;
		LEVEL 1 FOR 3.9;
		LEVEL 0 FOR 0.8;
		LEVEL 1 FOR 1.2;
		LEVEL Z FOR 5.5;
		LEVEL 1 FOR 87.3;
		LEVEL 0 FOR 5.2;
		LEVEL 1 FOR 102.5;
		LEVEL Z FOR 5.1;
		LEVEL 1 FOR 4.4;
		LEVEL 0 FOR 1.4;
		LEVEL 1 FOR 136.3;
		LEVEL 0 FOR 147.2;
		LEVEL 1 FOR 3.2;
		LEVEL 0 FOR 2.4;
		LEVEL Z FOR 5.1;
		LEVEL 0 FOR 188.5;
		LEVEL 1 FOR 4.0;
		LEVEL 0 FOR 1.9;
		LEVEL Z FOR 5.6;
		LEVEL 0 FOR 4.4;
		LEVEL 1 FOR 4.2;
		LEVEL 0 FOR 346.4;
		LEVEL 1 FOR 139.4;
		LEVEL Z FOR 5.6;
		LEVEL 1 FOR 4.4;
		LEVEL 0 FOR 1.4;
		LEVEL 1 FOR 94.2;
		LEVEL Z FOR 0.5;
		LEVEL 1 FOR 95.5;
		LEVEL 0 FOR 115.5;
		LEVEL 1 FOR 88.5;
		LEVEL Z FOR 771.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "bus_sel";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6;
}

DISPLAY_LINE
{
	CHANNEL = "bus_sel[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "bus_sel[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "bus_sel[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "bus_sel[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "bus_sel[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "alu_sel";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
	CHILDREN = 8, 9, 10, 11, 12, 13;
}

DISPLAY_LINE
{
	CHANNEL = "alu_sel[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "alu_sel[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "alu_sel[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "alu_sel[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "alu_sel[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "alu_sel[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "ld_reg";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
	CHILDREN = 15, 16, 17, 18, 19;
}

DISPLAY_LINE
{
	CHANNEL = "ld_reg[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "ld_reg[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "ld_reg[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "ld_reg[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "ld_reg[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "pc_sel";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
	CHILDREN = 21, 22, 23;
}

DISPLAY_LINE
{
	CHANNEL = "pc_sel[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "pc_sel[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "pc_sel[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "we_rd";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
	CHILDREN = 25, 26;
}

DISPLAY_LINE
{
	CHANNEL = "we_rd[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "we_rd[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "k";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 0;
	CHILDREN = 28, 29, 30, 31, 32, 33, 34, 35;
}

DISPLAY_LINE
{
	CHANNEL = "k[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "k[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "k[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "k[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "k[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "k[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "k[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "k[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "d";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 0;
	CHILDREN = 37, 38, 39, 40, 41, 42, 43, 44;
}

DISPLAY_LINE
{
	CHANNEL = "d[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "d[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "d[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "d[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "d[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "d[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "d[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "d[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "d7-0~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 0;
	CHILDREN = 46, 47, 48, 49, 50, 51, 52, 53;
}

DISPLAY_LINE
{
	CHANNEL = "d[7]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "d[6]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "d[5]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "d[4]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "d[3]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "d[2]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "d[1]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "d[0]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 45;
}

TIME_BAR
{
	TIME = 1300000;
	MASTER = TRUE;
}
;
