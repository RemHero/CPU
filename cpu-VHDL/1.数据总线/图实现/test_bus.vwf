/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 1.0us\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 4000.0;
	SIMULATION_TIME = 4000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 100.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("K")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("K[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "K";
}

SIGNAL("K[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "K";
}

SIGNAL("K[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "K";
}

SIGNAL("K[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "K";
}

SIGNAL("K[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "K";
}

SIGNAL("K[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "K";
}

SIGNAL("K[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "K";
}

SIGNAL("K[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "K";
}

SIGNAL("L")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = BIDIR;
	PARENT = "";
}

SIGNAL("L[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "L";
}

SIGNAL("L[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "L";
}

SIGNAL("L[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "L";
}

SIGNAL("L[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "L";
}

SIGNAL("L[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "L";
}

SIGNAL("L[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "L";
}

SIGNAL("L[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "L";
}

SIGNAL("L[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "L";
}

SIGNAL("LDDR[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("LDDR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("LDDR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("LE")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LE[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LE";
}

SIGNAL("LE[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LE";
}

SIGNAL("LE[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LE";
}

SIGNAL("LE[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LE";
}

SIGNAL("LE[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LE";
}

SIGNAL("LE[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LE";
}

SIGNAL("LE[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LE";
}

SIGNAL("LE[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LE";
}

SIGNAL("R1_BUS")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("R2_BUS")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("R3_BUS")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("SW_BUS")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("L[7]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("L[6]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("L[5]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("L[4]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("L[3]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("L[2]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("L[1]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("L[0]~result")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

GROUP("L~result7-0")
{
	MEMBERS = "L[7]~result", "L[6]~result", "L[5]~result", "L[4]~result", "L[3]~result", "L[2]~result", "L[1]~result", "L[0]~result";
}

GROUP("SWR123_BUS")
{
	MEMBERS = "SW_BUS", "R1_BUS", "R2_BUS", "R3_BUS";
}

GROUP("LDDR123")
{
	MEMBERS = "LDDR[1]", "LDDR[2]", "LDDR[3]";
}

TRANSITION_LIST("CLK")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		NODE
		{
			REPEAT = 39;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
	}
}

TRANSITION_LIST("K[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 3500.0;
	}
}

TRANSITION_LIST("K[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 3500.0;
	}
}

TRANSITION_LIST("K[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 3500.0;
	}
}

TRANSITION_LIST("K[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 3500.0;
	}
}

TRANSITION_LIST("K[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("K[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 200.0;
		}
		LEVEL 0 FOR 3700.0;
	}
}

TRANSITION_LIST("K[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000.0;
	}
}

TRANSITION_LIST("K[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 200.0;
		}
		LEVEL 0 FOR 3700.0;
	}
}

TRANSITION_LIST("L[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 4000.0;
	}
}

TRANSITION_LIST("L[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 4000.0;
	}
}

TRANSITION_LIST("L[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 4000.0;
	}
}

TRANSITION_LIST("L[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 4000.0;
	}
}

TRANSITION_LIST("L[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 4000.0;
	}
}

TRANSITION_LIST("L[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 4000.0;
	}
}

TRANSITION_LIST("L[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 4000.0;
	}
}

TRANSITION_LIST("L[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 4000.0;
	}
}

TRANSITION_LIST("LDDR[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 3300.0;
	}
}

TRANSITION_LIST("LDDR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 3100.0;
	}
}

TRANSITION_LIST("LDDR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 400.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 3200.0;
	}
}

TRANSITION_LIST("LE[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 115.576;
		LEVEL 1 FOR 0.175;
		LEVEL 0 FOR 199.38;
		LEVEL X FOR 3.381;
		LEVEL 0 FOR 100.645;
		LEVEL 1 FOR 95.974;
		LEVEL X FOR 103.381;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 196.424;
		LEVEL X FOR 3085.064;
	}
}

TRANSITION_LIST("LE[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 115.919;
		LEVEL 1 FOR 0.416;
		LEVEL 0 FOR 199.139;
		LEVEL X FOR 3.356;
		LEVEL 0 FOR 100.696;
		LEVEL 1 FOR 95.948;
		LEVEL X FOR 103.356;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 196.449;
		LEVEL X FOR 3084.721;
	}
}

TRANSITION_LIST("LE[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 115.502;
		LEVEL 1 FOR 0.72;
		LEVEL 0 FOR 198.835;
		LEVEL X FOR 3.334;
		LEVEL 0 FOR 101.097;
		LEVEL 1 FOR 95.569;
		LEVEL X FOR 103.334;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 196.471;
		LEVEL X FOR 3085.138;
	}
}

TRANSITION_LIST("LE[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 115.786;
		LEVEL 1 FOR 0.346;
		LEVEL 0 FOR 199.209;
		LEVEL X FOR 3.59;
		LEVEL 0 FOR 100.539;
		LEVEL 1 FOR 95.871;
		LEVEL X FOR 103.59;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 196.215;
		LEVEL X FOR 3084.854;
	}
}

TRANSITION_LIST("LE[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 115.608;
		LEVEL 1 FOR 0.424;
		LEVEL 0 FOR 199.131;
		LEVEL X FOR 3.587;
		LEVEL 0 FOR 196.413;
		LEVEL X FOR 103.587;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 0.883;
		LEVEL 0 FOR 195.335;
		LEVEL X FOR 3085.032;
	}
}

TRANSITION_LIST("LE[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 115.985;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 3.399;
		LEVEL 1 FOR 195.956;
		LEVEL X FOR 3.403;
		LEVEL 0 FOR 196.597;
		LEVEL X FOR 103.403;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 0.837;
		LEVEL 0 FOR 195.565;
		LEVEL X FOR 3084.655;
	}
}

TRANSITION_LIST("LE[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 115.406;
		LEVEL 1 FOR 0.66;
		LEVEL 0 FOR 198.895;
		LEVEL X FOR 3.608;
		LEVEL 1 FOR 0.009;
		LEVEL 0 FOR 196.383;
		LEVEL X FOR 103.608;
		LEVEL 1 FOR 0.009;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1.09;
		LEVEL 0 FOR 195.098;
		LEVEL X FOR 3085.234;
	}
}

TRANSITION_LIST("LE[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 115.753;
		LEVEL 1 FOR 0.624;
		LEVEL 0 FOR 3.145;
		LEVEL 1 FOR 195.786;
		LEVEL X FOR 3.588;
		LEVEL 0 FOR 196.412;
		LEVEL X FOR 103.588;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1.075;
		LEVEL 0 FOR 195.142;
		LEVEL X FOR 3084.887;
	}
}

TRANSITION_LIST("R1_BUS")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 300.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 3300.0;
	}
}

TRANSITION_LIST("R2_BUS")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 700.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 3200.0;
	}
}

TRANSITION_LIST("R3_BUS")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 800.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 3100.0;
	}
}

TRANSITION_LIST("SW_BUS")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 200.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 3500.0;
	}
}

TRANSITION_LIST("L[7]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 106.806;
		LEVEL 1 FOR 0.175;
		LEVEL 0 FOR 199.38;
		LEVEL Z FOR 3.381;
		LEVEL 0 FOR 100.645;
		LEVEL 1 FOR 95.974;
		LEVEL Z FOR 103.381;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 196.424;
		LEVEL Z FOR 3093.834;
	}
}

TRANSITION_LIST("L[6]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 107.088;
		LEVEL 1 FOR 0.416;
		LEVEL 0 FOR 199.139;
		LEVEL Z FOR 3.356;
		LEVEL 0 FOR 100.696;
		LEVEL 1 FOR 95.948;
		LEVEL Z FOR 103.356;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 196.449;
		LEVEL Z FOR 3093.552;
	}
}

TRANSITION_LIST("L[5]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 106.614;
		LEVEL 1 FOR 0.72;
		LEVEL 0 FOR 198.835;
		LEVEL Z FOR 3.334;
		LEVEL 0 FOR 101.097;
		LEVEL 1 FOR 95.569;
		LEVEL Z FOR 103.334;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 196.471;
		LEVEL Z FOR 3094.026;
	}
}

TRANSITION_LIST("L[4]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 106.872;
		LEVEL 1 FOR 0.346;
		LEVEL 0 FOR 199.209;
		LEVEL Z FOR 3.59;
		LEVEL 0 FOR 100.539;
		LEVEL 1 FOR 95.871;
		LEVEL Z FOR 103.59;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 196.215;
		LEVEL Z FOR 3093.768;
	}
}

TRANSITION_LIST("L[3]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 106.812;
		LEVEL 1 FOR 0.424;
		LEVEL 0 FOR 199.131;
		LEVEL Z FOR 3.587;
		LEVEL 0 FOR 196.413;
		LEVEL Z FOR 103.587;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 0.883;
		LEVEL 0 FOR 195.335;
		LEVEL Z FOR 3093.828;
	}
}

TRANSITION_LIST("L[2]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 107.088;
		LEVEL 1 FOR 0.2;
		LEVEL 0 FOR 3.399;
		LEVEL 1 FOR 195.956;
		LEVEL Z FOR 3.403;
		LEVEL 0 FOR 196.597;
		LEVEL Z FOR 103.403;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 0.837;
		LEVEL 0 FOR 195.565;
		LEVEL Z FOR 3093.552;
	}
}

TRANSITION_LIST("L[1]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 106.564;
		LEVEL 1 FOR 0.66;
		LEVEL 0 FOR 198.895;
		LEVEL Z FOR 3.608;
		LEVEL 1 FOR 0.009;
		LEVEL 0 FOR 196.383;
		LEVEL Z FOR 103.608;
		LEVEL 1 FOR 0.009;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1.09;
		LEVEL 0 FOR 195.098;
		LEVEL Z FOR 3094.076;
	}
}

TRANSITION_LIST("L[0]~result")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 106.872;
		LEVEL 1 FOR 0.624;
		LEVEL 0 FOR 3.145;
		LEVEL 1 FOR 195.786;
		LEVEL Z FOR 3.588;
		LEVEL 0 FOR 196.412;
		LEVEL Z FOR 103.588;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1.075;
		LEVEL 0 FOR 195.142;
		LEVEL Z FOR 3093.768;
	}
}

DISPLAY_LINE
{
	CHANNEL = "CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SWR123_BUS";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5;
}

DISPLAY_LINE
{
	CHANNEL = "SW_BUS";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "R1_BUS";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "R2_BUS";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "R3_BUS";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "LDDR123";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
	CHILDREN = 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "LDDR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "LDDR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "LDDR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "K";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
	CHILDREN = 11, 12, 13, 14, 15, 16, 17, 18;
}

DISPLAY_LINE
{
	CHANNEL = "K[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "K[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "K[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "K[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "K[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "K[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "K[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "K[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "LE";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
	CHILDREN = 20, 21, 22, 23, 24, 25, 26, 27;
}

DISPLAY_LINE
{
	CHANNEL = "LE[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "LE[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "LE[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "LE[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "LE[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "LE[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "LE[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "LE[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "L";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 0;
	CHILDREN = 29, 30, 31, 32, 33, 34, 35, 36;
}

DISPLAY_LINE
{
	CHANNEL = "L[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "L[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "L[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "L[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "L[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "L[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "L[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "L[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "L~result7-0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 0;
	CHILDREN = 38, 39, 40, 41, 42, 43, 44, 45;
}

DISPLAY_LINE
{
	CHANNEL = "L[7]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "L[6]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "L[5]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "L[4]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "L[3]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "L[2]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "L[1]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 37;
}

DISPLAY_LINE
{
	CHANNEL = "L[0]~result";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 37;
}

TIME_BAR
{
	TIME = 900000;
	MASTER = TRUE;
}
;
